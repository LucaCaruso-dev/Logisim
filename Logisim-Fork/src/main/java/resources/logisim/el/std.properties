#
# std/Builtin.java
#
builtinLibrary= Ενσωματωμένο
# instance/StdAttr.java
stdFacingAttr= Προσανατολισμός
stdDataWidthAttr= Bits Δεδομένων
stdTriggerAttr= Σκανδαλισμός
stdTriggerRising= Θετική Ακμή
stdTriggerFalling= Αρνητική Ακμή
stdTriggerHigh= Υψηλό Επίπεδο
stdTriggerLow= Χαμηλό Επίπεδο
stdTriggerLatch = Χωρίς ενεργοποίηση
stdLabelAttr= Ετικέτα
stdLabelFontAttr= Γραμματοσειρά Ετικέτας
# instance/InstanceTextField.java
changeLabelAction= Αλλαγή Ετικέτας
#
# std/base/Base.java
#
baseLibrary= Βασική

# std/base/BitExtender.java
extenderComponent= Επέκταση Bit
extenderInAttr= Εύρος Bit Εισόδου
extenderOutAttr= Εύρος Bit Εξόδου
extenderTypeAttr= Τύπος Επέκτασης
extenderOneType= Ένα
extenderZeroType= Μηδέν
extenderSignType= Πρόσημο
extenderInputType= Είσοδος
extenderMainLabel= επέκταση
extenderOneLabel= 1
extenderZeroLabel= 0
extenderSignLabel= πρόσημο
extenderInputLabel= είσοδος

# std/base/Clock
clockComponent= Ρολόι
clockHighAttr= Υψηλή Διάρκεια
clockLowAttr= Χαμηλή Διάρκεια
clockDurationValue= %s Παλμοί
clockDurationOneValue= %s Παλμός
durationSmallMessage= Η τιμή πρέπει να είναι τουλάχιστον %s.
durationLargeMessage= Η τιμή πρέπει να είναι %s ή λιγότερο.
freqInvalidMessage= Η τιμή δεν είναι έγκυρος ακέραιος

# std/base/Pin
pinComponent= Ακροδέκτης
pinInputName= Είσοδος
pinOutputName= Έξοδος
pinThreeStateAttr= Τριών-Καταστάσεων?
pinOutputAttr= Έξοδος?
pinPullAttr= Συμπεριφορά Οδήγησης
pinPullNoneOption= Αμετάβλητο
pinPullUpOption= Οδήγηση Πάνω
pinPullDownOption= Οδήγηση Κάτω
pinLabelLocAttr= Θέση Ετικέτας
pinInputToolTip= Προσθήκη ενός ακροδέκτη εισόδου
pinOutputToolTip= Προσθήκη ενός ακροδέκτη εξόδου
pinFrozenTitle= Ακροδέτης συνδεδεμένος στο Κύκλωμα.
pinFrozenQuestion= Ο ακροδέκτης είναι διασυνδεδεμένος στην κατάσταση του κυκλώματος. Δημιουργία μιας νέας κατάστασης του κυκλώματος?

# std/base/Probe
probeComponent= Δειγματολήπτης

# std/base/PullResistor
pullComponent= Αντίσταση Οδήγησης
pullTypeAttr= Διεύθυνση Οδήγησης
pullZeroType= Μηδέν
pullOneType= Ένα
pullErrorType= Σφάλμα

# std/base/Text.java
textComponent= Ετικέτα
textTextAttr= Κείμενο
textFontAttr= Γραμματοσειρά
textHorzAlignAttr= Οριζόντια Στοίχιση
textHorzAlignLeftOpt= Αριστερά
textHorzAlignRightOpt= Δεξιά
textHorzAlignCenterOpt= Κέντρο
textVertAlignAttr= Κάθετη Στοίχιση
textVertAlignTopOpt= Επάνω
textVertAlignBaseOpt= Βάση
textVertAlignBottomOpt= Κάτω
textVertAlignCenterOpt= Κέντρο

# std/base/Tunnel.java
tunnelComponent= Σήραγγα

#
# std/Wiring.java
#
wiringLibrary= Καλωδίωση
wiringGateAttr= Θέση Πύλης
wiringGateBottomRightOption= Κάτω/Δεξιά
wiringGateTopLeftOption= Πάνω/Αριστερά

# std/wiring/Transistor.java
transistorComponent= Τρανζίστορ
transistorTypeAttr= Τύπος
transistorTypeP= P-Type
transistorTypeN= N-Type

# std/wiring/TransmissionGate.java
transmissionGateComponent= Πύλη Μετάδοσης

# std/wiring/Power.java
powerComponent= Ισχύς

# std/wiring/Ground.java
groundComponent= Γείωση

#
# std/Gates.java
#
gatesLibrary= Πύλες
gateSizeAttr= Μέγεθος Πύλης
gateSizeNarrowOpt= Στενό
gateSizeNormalOpt= Μέτριο
gateSizeWideOpt= Φαρδύ
gateNegateAttr= Αρνητικό %s
gateInputsAttr= Αριθμός Εισόδων
gateOutput01= 0/1
gateOutput0Z= 0/ασύνδετο
gateOutputZ1= ασύνδετο/1
gateOutputAttr= Τιμή Εξόδου
xorBehaviorAttr= Συμπεριφορά Πολλαπλών-Εισόδων
xorBehaviorOne= Όταν μια είσοδο είναι ενεργή
xorBehaviorOdd= Όταν ένας περιττός αριθμός είναι ενεργός
# std/Constant.java
constantComponent= Σταθερά
constantValueAttr= Τιμή
# std/NotGate.java
notGateComponent= NOT Πύλη
# std/Buffer.java
bufferComponent= Απομονωτής
# std/AndGate.java
andGateComponent= AND Πύλη
# std/NandGate.java
nandGateComponent= NAND Πύλη
# std/NorGate.java
norGateComponent= NOR Πύλη
# std/OrGate.java
orGateComponent= OR Πύλη
# std/XorGate.java
xorGateComponent= XOR Πύλη
# std/XnorGate.java
xnorGateComponent= XNOR Πύλη
# std/OddParityGate.java
oddParityComponent= Περιττή Ισοτιμία
# std/EvenParityGate.java
evenParityComponent= Άρτια Ισοτιμία
# std/ControlledBuffer.java
controlledBufferComponent= Ελεγχόμενος Απομονωτής
controlledInverterComponent= Ελεγχόμενος Αντιστροφέας
controlledControlOption= Θέση Γραμμής Ελέγχου
controlledLeftHanded= Αριστερόχειρα
controlledRightHanded= Δεξιόχειρα
#
# std/Memory.java
#
memoryLibrary= Μνήμη
memEnableLabel= en
# AbstractFlipFlop.java
flipFlopClockTip= Clock: η κατάσταση ενημερώνεται με τον σκανδαλισμό
flipFlopQTip= Τρέχουσα κατάσταση flip-flop
flipFlopNotQTip= Αντίστροφο τρέχουσας κατάστασης flip-flop
latchETip = Ενεργοποίηση: ενημερώσεις κατάστασης στο trigger
latchQTip = Τρέχουσα κατάσταση του latch
latchNotQTip = Συμπλήρωμα της τρέχουσας κατάστασης του latch
flipFlopResetTip= Clear: όταν %s, η κατάσταση του ακροδέκτη μεταβαίνει σε 0 ασύγχρονα
flipFlopPresetTip= Preset: όταν %s, η κατάσταση του ακροδέκτη μεταβαινει σε 1 ασύγχρονα
flipFlopEnableTip= Enable: όταν 0, οι σκανδαλισμοί του ρολογιού δεν επηρεάζουν
# std/Counter.java
counterComponent= Μετρητής
counterMaxAttr= Μέγιστη τιμή
counterGoalAttr= Ενέργεια στην Υπερχείλιση
counterGoalWrap= Περιστροφή
counterGoalStay= Παραμονή σε τιμή
counterGoalContinue= Συνέχιση της μέτρησης
counterGoalLoad= Φόρτωση επόμενης τιμής
counterQTip= Output: τρέχουσα τιμή του μετρητή
counterClockTip= Clock: η τιμή μπορεί να ανανεώνεται με τον σκανδαλισμό
counterDataTip= Data: η τιμή προς φόρτωση στον μετρητή
counterLoadTip= Load: όταν 1, φορτώνει από την είσοδο δεδομένων (αν Count = 0) ή μειώνει
counterEnableTip= Count: όταν 1, ο μετρητής αυξάνει (ή μειώνει αν Load = 1)
counterResetTip= Clear: όταν 1, αρχικοποιείται σε 0 ασύγχρονα
counterCarryTip= Carry: είναι 1 όταν η τιμή φτάσει το μέγιστο (ελάχιστο κατά την μειούμενη μέτρηση)
counterEnableLabel= ct
counterLabel= ctr
# std/DFlipFlop.java
dFlipFlopComponent= D Flip-Flop
# std/TFlipFlop.java
tFlipFlopComponent= T Flip-Flop
# std/JKFlipFlop.java
jkFlipFlopComponent= J-K Flip-Flop
# std/SRFlipFlop.java
srFlipFlopComponent= S-R Flip-Flop
# std/DLatch.java
dLatchComponent= D Latch
# std/SRLatch.java
srLatchComponent= S-R Latch
# std/Random.java
randomSeedAttr= Γεννήτορας
randomComponent= Γεννήτρια Τυχαίων Αριθμών
randomQTip= Output: τρέχων αριθμός στην ακολουθία
randomClockTip= Clock: η τιμή μπορεί να ανανεώνεται με τον σκανδαλισμό
randomNextTip= Enable: μεταβαίνει στο επόμενο αριθμό της ακολουθίας με τον σκανδαλισμό του ρολογιού
randomResetTip= Clear: όταν 1, αρχικοποιείται στον αρχικό "γεννήτορα" ασύγχρονα
# std/Register.java
registerComponent= Καταχωρητής
registerQTip= Output: η τρέχουσα τιμή του καταχωρητή
registerDTip= Data: η αποθηκευμένη τιμή με τον σκανδαλισμό του ρολογιού
registerClkTip= Clock: η τιμή ανανεώνεται με τον σκανδαλισμό 
registerClrTip= Clear: όταν 1, η τιμή του ακροδέκτη μεταβαίναι σε 0 ασύγχρονα
registerEnableTip= Enable: όταν 0, οι σκανδαλισμοί του ρολογιού δεν επηρεάζουν
registerLabel= reg
registerWidthLabel= (%sb)
# std/RamFactory.java
ramComponent= RAM
# std/RomFactory.java
romComponent= ROM
romContentsAttr= Περιεχόμενα
romContentsValue= (πατήστε για επεξεργασία)
romChangeAction= Επεξεργασία Περιεχομένων της ROM
# std/Ram.java
ramAddrWidthAttr= Εύρος Ψηφίων Διεύθυνσης
ramDataWidthAttr= Εύρος Ψηφίων Δεδομένων
ramDataLabel= D
ramAddrLabel= A
ramWELabel= str
ramCSLabel= sel
ramOELabel= ld
ramClrLabel= clr
ramGigabyteLabel= %sGB RAM
ramMegabyteLabel= %sMB RAM
ramKilobyteLabel= %sKB RAM
ramByteLabel= %sB RAM
romGigabyteLabel= %sGB ROM
romMegabyteLabel= %sMB ROM
romKilobyteLabel= %sKB ROM
romByteLabel= %sB ROM
memDataTip= Data: η τιμή που φορτώνεται από τη διεύθυνση
memAddrTip= Address: η τοποθεσία που προσπελαύνεται στην μνήμη
memCSTip= Chip select: το 0 απενεργοποιεί το στοιχείο
ramClkTip= Clock: η τιμή της μνήμης ανανεώνεται στην άνοδο από 0 σε 1 
ramOETip= Load: αν 1, φορτώνει τη μνήμη στην έξοδο
ramWETip= Store: αν 1, αποθηκεύει την είσοδο στη μνήμη
ramClrTip= Clear: αν 1, τα περιεχόμενα μεταβαίνουν σε 0 ασύγχρονα
ramBusTip= Data: η τιμή φορτώνεται ή αποθηκεύεται στη διεύθυνση
ramInTip= Input: τιμή προς αποθήκευση στη διεύθυνση
ramBusAttr= Διεπαφή Δεδομένων
ramBusSynchCombined= Μια σύγχρονη θύρα φόρτωσης/αποθήκευσης
ramBusAsynchCombined= Μια ασύγχρονη θύρα φόρτωσης/αποθήκευσης
ramBusSeparate= Ξεχωριστές θύρες φόρτωσης και αποθήκευσης
ramEditMenuItem= Επεξεργασία Περιεχομένων...
ramClearMenuItem= Καθαρισμός Περιεχομένων
ramLoadMenuItem= Φόρτωση Εικόνας...
ramSaveMenuItem= Αποθήκευση Εικόνας...
ramConfirmClearTitle= Επιβεβαίωση Καθαρισμού
ramConfirmClearMsg= Είστε σίγουροι ότι θέλετε να μηδενίσετε την μνήμη;
ramLoadDialogTitle= Φόρτωση Εικόνας RAM
romLoadDialogTitle= Φόρτωση Εικόνας ROM
ramLoadErrorTitle= Σφάλμα Φόρτωσης
ramSaveDialogTitle= Αποθήκευση Εικόνας RAM
romSaveDialogTitle= Αποθήκευση Εικόνας ROM
ramSaveErrorTitle= Σφάλμα κατά την Αποθήκευση
# std/memory/ShiftRegister.java
shiftRegisterComponent= Καταχωρητής Ολίσθησης
shiftRegisterLabel1= shift reg
shiftRegisterLabel2= %sx%s
shiftRegLengthAttr= Αριθμός Σταδίων
shiftRegParallelAttr= Παράλληλη Φόρτωση
shiftRegShiftTip= Shift: η ολίσθηση είναι ανενεργή όταν είναι 0
shiftRegClockTip= Clock: οι τιμές μπορούν να ανανεώνονται με τον σκανδαλισμό
shiftRegClearTip= Clear: όταν 1, αρχικοποιούνται όλα σε 0 ασύγχρονα
shiftRegInTip= Input: η τιμή προς ολίσθηση στο πρώτο στάδιο
shiftRegOutTip= Output: είναι το περιεχόμενο του τελευταίου σταδίου
shiftRegLoadTip= Load: όταν 1 (με shift = 0), όλα τα στάδια φορτώνουν από τις εισόδους
#
# std/Plexers.java
#
plexerLibrary= Πλέκτες/Κωδικοποιητές
plexerSelectBitsAttr= Επιλογή Ψηφίων
plexerThreeStateAttr= Τριών-Καταστάσεων?
plexerDisabledAttr= Απενεργοποιημένη Έξοδος
plexerDisabledFloating= Ασύνδετο
plexerDisabledZero= Μηδέν
# std/Multiplexer.java
multiplexerComponent= Πολυπλέκτης
multiplexerSelectTip= Select: υποδεικνύει ποια είσοδο οδηγείται στην έξοδο
multiplexerEnableTip= Enable: όταν δεν είναι 0, έξοδος είναι η επιλεγμένη είσοδος
multiplexerInTip= Είσοδος %s
multiplexerOutTip= Έξοδος
# std/Demultiplexer.java
demultiplexerComponent= Αποπλέκτης
demultiplexerSelectTip= Select: υποδεικνύει ποια έξοδος δέχεται την είσοδο
demultiplexerEnableTip= Enable: όταν δεν είναι 0, η επιλεγμένη έξοδος είναι η είσοδος
demultiplexerInTip= Είσοδος
demultiplexerOutTip= Έξοδος %s
# std/Decoder.java
decoderComponent= Αποκωδικοποιητής
decoderSelectTip= Select: υποδεικνύει ποια έξοδο γίνεται 1
decoderEnableTip= Enable: όταν δεν είναι 0, η επιλεγμένη έξοδος είναι η είσοδος
decoderOutTip= Έξοδος %s
# std/DisplayDecoder.java
DisplayDecoderComponent = Αποκωδικοποιητής Οθόνη 7 τμημάτων
DisplayDecoderOutTip = Έξοδος %s
DisplayDecoderInTip = Είσοδος %s
# std/plexers/PriorityEncoder.java
priorityEncoderComponent= Κωδικοποιητής Προτεραιότητας
priorityEncoderInTip= Είσοδος %s
priorityEncoderOutTip= Output: διεύθυνση της υψηλότερης-βαθμονομημένης με 1 εισόδου
priorityEncoderEnableInTip= Enable Input: με 0 απενεργοποιεί το στοιχείο
priorityEncoderEnableOutTip= Enable Output: 1 αν είναι ενεργοποιημένο και καμία είσοδος δεν είναι 1
priorityEncoderGroupSignalTip= Group Select: 1 αν είναι ενεργοποιημένο και οποιαδήποτε είσοδος είναι 1
# std/BitSelector.java
bitSelectorComponent= Επιλογέας Bit
bitSelectorGroupAttr= Bits Εξόδου
bitSelectorOutputTip= Output: η τιμή της επιλεγμένης ομάδας bits από τα δεδομένα
bitSelectorDataTip= Δεδομένα
bitSelectorSelectTip= Select: υποδεικνύει ποια ομάδα από τα δεδομένα έχει επιλεγεί
#
# arith/Arithmetic.java
#
arithmeticLibrary= Αριθμητικά
# arith/Adder.java
adderComponent= Αθροιστής
adderInputTip= Input: ένας από τους αριθμούς προς πρόσθεση
adderOutputTip= Output: Το άθροισμα των εισόδων (συμπεριλαμβανομένου του κρατουμένου εισόδου)
adderCarryInTip= Carry In: αν 1, ένα επιπλέον 1 προστίθεται στην έξοδο
adderCarryOutTip= Carry Out: 1 αν το άθροισμα υπερχειλίζει τα διαθέσιμα bits
# arith/Subtractor.java
subtractorComponent= Αφαιρέτης
subtractorMinuendTip= Αφαιρέτης: ο αριθμός από τον οποίο θα αφαιρέσουμε
subtractorSubtrahendTip= Αφαιρετέος: ο αριθμός που θα αφαιρεθεί από τον αφαιρέτη
subtractorOutputTip= Output: η διαφορά του αφαιρέτη και του αφαιρετέου
subtractorBorrowInTip= Borrow In: αν 1, η έξοδος μειώνεται κατά 1
subtractorBorrowOutTip= Borrow Out: 1 αν η διαφορά έχει ως αποτέλεσμα αρνητικό αριθμό
# arith/Multiplier.java
multiplierComponent= Πολλαπλασιαστής
multiplierInputTip= Input: ένας από τους αριθμούς για πολλαπλασιασμό
multiplierOutputTip= Output: το γινόμενο των εισόδων, συν το κρατούμενο εισόδου
multiplierCarryInTip= Carry In: ένας αριθμός για να προστεθεί στην έξοδο
multiplierCarryOutTip= Carry Out: Τα υψηλότερης αξίας bits του γινομένου
# arith/Divider.java
dividerComponent= Διαιρέτης
dividerUpperInput= upper
dividerRemainderOutput= rem
dividerDividendLowerTip= Dividend Lower: το χαμηλότερης αξίας μισό του αριθμού που θα διαιρεθεί
dividerDividendUpperTip= Dividend Upper: το υψηλότερης αξίας μισό του αριθμού που θα διαιρεθεί
dividerDivisorTip= Divisor: ο αριθμός με τον οποίο θα γίνει η διαίρεση
dividerOutputTip= Output: το αποτέλεσμα της διαίρεσης
dividerRemainderTip= Remainder: το υπόλοιπο της διαίρεσης (dividend - output * divisor)
# arith/Negator.java
negatorComponent= Αρνητικός Αριθμός
negatorInputTip= Input: ο αριθμός που θα μετατραπεί σε αρνητικό
negatorOutputTip= Output: το συμπλήρωμα ως προς 2 της εισόδου
# arith/Comparator.java
comparatorComponent= Συγκριτής
comparatorType= Αριθμητικός Τύπος
unsignedOption= Απροσήμαστο
twosComplementOption= Συμπλήρωμα ως προς 2
comparatorInputATip= A: ο αριθμός που προηγείται του χειριστηρίου σύγκρισης
comparatorInputBTip= B: ο αριθμός που έπεται του χειριστηρίου σύγκρισης
comparatorLessTip= Less: 1 αν το A είναι μικρότερο του B
comparatorEqualTip= Equal: 1 αν το A είναι ίσο με το B
comparatorGreaterTip= Greater: 1 αν το A είναι μεγαλύτερο του B
# arith/Shifter.java
shifterComponent= Ολισθητής
shifterShiftAttr= Τύπος Ολίσθησης
shiftLogicalLeft= Λογική Αριστερά
shiftLogicalRight= Λογική Δεξιά
shiftArithmeticRight= Αριθμητική Δεξιά
shiftRollLeft= Περιστροφή Αριστερά
shiftRollRight= Περιστροφή Δεξιά
shifterDistanceTip= Distance: πόσες πολισθήσεις της εισόδου θα γίνουν
shifterInputTip= Input: τα bits που θα ολισθήσουμε
shifterOutputTip= Output: το αποτέλεσμα της ολίσθησης της εισόδου
# arith/BitAdder.java
bitAdderComponent= Μετρητής Bit
bitAdderInputTip= Input: τα bits που πρέπει να απαριθμηθούν
bitAdderOutputManyTip= Output: το πλήθος των bits με τιμή 1 στην είσοδο
bitAdderOutputOneTip= Output: το πλήθος των bits με τιμή 1 στην είσοδο
# arith/BitFinder.java
bitFinderComponent= Εϋρεση Bit
bitFinderFindLabel= find
bitFinderHighLabel= high
bitFinderLowLabel= low
bitFinderHighOption= Υψηλότερης-τάξης %s
bitFinderLowOption= Χαμηλότερης-τάξης %s
bitFinderTypeAttr= Τύπος
bitFinderIndexHighTip= Index: δείκτης του υψηλότερης-ταξης %s της εισόδου
bitFinderIndexLowTip= Index: δείκτης του χαμηλότερης-τάξης %s της εισόδου
bitFinderPresentTip= Present: 1 αν η είσοδος περιέχει ένα %s
bitFinderInputTip= Input: τα bits τα οποία θα ψάξουμε
#
# io
#
# io/Io.java
ioLibrary= Είσοδος/Έξοδος
ioLabelCenter= Κέντρο
ioBitWidthAttr= Εύρος Bit
ioColorAttr= Χρώμα
ioLabelLocAttr= Θέση Ετικέτας
ioLabelColorAttr= Χρώμα Ετικέτας
ioActiveAttr= Ενεργό όταν Υψηλό?
# io/Button.java
buttonComponent= Πλήκτρο
# io/Switch.java
switchComponent = Switch
# io/Joystick.java
joystickComponent= Χειριστήριο
# io/Keyboard.java
keyboardComponent= Πληκτρολόγιο
keybDesc= Πληκτρολόγιο (buffer cap. %s)
keybBufferLengthAttr= Μήκος Buffer
keybClearTip= Clear: όταν 1 αδειάζει το buffer
keybClockTip= Clock: με τον σκανδαλισμό καταναλώνεται ο πρώτος χαρακτήρας από το buffer
keybEnableTip= Read enable: το 0 απενεργοποιεί το ρολόι
keybAvailTip= Available: 1 όταν ο buffer διαθέτει χαρακτήρες
keybOutputTip= Data: η %s τιμή του πρώτου χαρακτήρα του buffer
# io/Led.java
ledComponent= LED
# io/RGBLed.java
rgbledComponent = RGB LED
ioMultiBit = Multibit?
# io/SevenSegment.java
sevenSegmentComponent= Οθόνη 7 τμημάτων
# io/HexDigit.java
hexDigitComponent= Hex Digit Display
# io/DotMatrix.java
dotMatrixComponent= LED Matrix
ioMatrixInput= Μορφή Εισόδου
ioMatrixRows= Γραμμές Πίνακα
ioMatrixCols= Στήλες Πίνακα
ioOnColor= Χρώμα Ενεργοποίησης
ioOffColor= Χρώμα Απενεργοποίησης
ioBackgroundColor= Φόντο
ioMatrixPersistenceAttr= Φως Εμμονής
ioMatrixShape= Σχήμα Κουκίδας
ioInputColumn= Στήλες
ioInputRow= Γραμμές
ioInputSelect= Επιλογή Γραμμές/Στήλες
ioShapeCircle= Κυκλικό
ioShapeSquare= Τετράγωνο
# io/Tty.java
ttyComponent= TTY
ttyDesc= TTY (%s rows, %s cols)
ttyDescShort= TTY
ttyRowsAttr= Γραμμές
ttyColsAttr= Στήλες
ttyClearTip= Clear: όταν 1 καθαρίζει την οθόνη
ttyClockTip= Clock: ο σκανδαλισμός προσθέτει χαρακτήρα στην είσοδο
ttyEnableTip= Write enable: όταν 0 απενεργοποιεί το ρολόι
ttyInputTip= Data: η %s τιμή του επόμενου χαρακτήρα προς εγγραφή
