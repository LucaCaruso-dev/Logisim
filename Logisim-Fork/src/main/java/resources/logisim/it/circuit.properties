#
# Analyze.java
#
defaultInputLabels = a,b,c,d,e,f,g,h
defaultOutputLabels = x,y,z,u,v,w,s,t
#
# AnalyzeException.java
#
<<<<<<< Updated upstream
analyzeCircularError =Trovati due circuiti che si richiamano vicendevolmente, calcolo invece la tabella di verit\u00e0.
analyzeConflictError =Trovato conflitto tra output, calcolo invece la tabella di verit\u00e0.
analyzeCannotHandleError = Calcolo la tabella di verit\u00e0 al posto dell'espressione a causa di %s.
=======
analyzeCircularError =Trovati due circuiti che si richiamano vicendevolmente, calcolo invece la tabella di verità.
analyzeConflictError =Trovato conflitto tra output, calcolo invece la tabella di verità.
analyzeCannotHandleError = Calcolo la tabella di verità al posto dell'espressione a causa di %s.
>>>>>>> Stashed changes
#
# circuit/Circuit.java
#
circuitName =Nome Circuito
circuitLabelLocAttr = Posizione Etichetta
circuitLabelAttr = Etichetta Condivisa
circuitLabelDirAttr = Orientamento Etichetta Condivisa
circuitLabelFontAttr = Font scrittura Etichetta Condivisa
#
# circuit/CircuitMutation.java
#
unknownChangeAction = Cambia Circuito
#
# circuit/Subcircuit.java
#
subcircuitViewItem = Vista %s
subcircuitCircuitTip = %s sottocircuito
#
# circuit/RadixOption.java
#
radixAttr = Radix
radix2 = Binario
radix10Signed = Decimale con Segno
radix10Unsigned = Decimale senza Segno
radix8 = Ottale
radix16 = Esadecimale
#
# circuit/SplitterClass.java
#
# splitter component name
splitterComponent = Splitter
# splitter end tool tips
<<<<<<< Updated upstream
splitterCombinedTip = Estremit\u00e0 combinata dello splitter
splitterSplit0Tip = Nesusn bit dall'estremit\u00e0 combinata
splitterSplit1Tip = Bit %s dell'estremit\u00e0 combinata
splitterSplitManyTip = Bit %s dell'estremit\u00e0 combinata
=======
splitterCombinedTip = Estremità combinata dello splitter
splitterSplit0Tip = Nesusn bit dall'estremità combinata
splitterSplit1Tip = Bit %s dell'estremità combinata
splitterSplitManyTip = Bit %s dell'estremità combinata
>>>>>>> Stashed changes
# splitter attributes
splitterBitWidthAttr = Numero Bit Interni
splitterFanOutAttr = Uscite
splitterBitAttr = Bit %s
splitterBitNone = Nessuno
splitterAppearanceAttr = Aspetto
splitterAppearanceLegacy = Classico
splitterAppearanceLeft = Rivolto a sinistra
splitterAppearanceCenter = Centrato
splitterAppearanceRight = Rivolto a destra
splitterDistributeAscending = Distribuzione Crescente
splitterDistributeDescending = Distribuzione Decrescente
splitterDistribute = Distribuzione bit
#
# std/Tunnel.java
#
# tunnel component mode
tunnelnormal = Normale
tunnelmicro = Piccolo
tunnelmode = Modalit\u00e0
#
# circuit/WireClass.java
#
wireComponent = Filo
wireLengthAttr = Lunghezza
wireDirectionAttr = Direzione
wireDirectionHorzOption = Orizzontale
wireDirectionVertOption = Verticale

# circuit/appear/AppearanceOrigin
circuitAnchor = Ancora
appearanceFacingAttr = Aspetto Orientamento

# circuit/appear/AppearancePort
circuitPort = Porta
