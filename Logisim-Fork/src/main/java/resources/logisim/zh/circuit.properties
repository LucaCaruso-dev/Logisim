#
# Analyze.java
#
defaultInputLabels = a,b,c,d,e,f,g,h
defaultOutputLabels = x,y,z,u,v,w,s,t
#
# AnalyzeException.java
#
analyzeCircularError = 检测到循环引用;将计算真值表.
analyzeConflictError = 检测到冲突的输出;将计算真值表。
analyzeCannotHandleError = 因为%s,无法计算表达式,将计算真值表.
#
# circuit/Circuit.java
#
circuitName = 电路名称
circuitLabelLocAttr =  标签位置
circuitLabelAttr = 共享标签(显示在封装上)
circuitLabelDirAttr = 共享标签朝向
circuitLabelFontAttr = 共享标签字体
#
# circuit/CircuitMutation.java
#
unknownChangeAction =  更改电路
#
# circuit/Subcircuit.java
#
subcircuitViewItem = 查看%s
subcircuitCircuitTip = %s子电路
#
# circuit/RadixOption.java
#
radixAttr = 进制
radix2 = 二进制
radix10Signed = 有符号十进制
radix10Unsigned = 无符号十进制
radix8 = 八进制
radix16 = 十六进制
#
# circuit/SplitterClass.java
#
# splitter component name
splitterComponent = 分线器(Splitter)
# splitter end tool tips
splitterCombinedTip = 分线器汇聚端()
splitterSplit0Tip = 无汇聚端数据
splitterSplit1Tip = 汇聚端的第%s位
splitterSplitManyTip = 汇聚端的第%s位
# splitter attributes
splitterBitWidthAttr = 位宽
splitterFanOutAttr = 分线端口数
splitterBitAttr = 第%s位对应分线端口
splitterBitNone = 无
splitterAppearanceAttr = 外观
splitterAppearanceLegacy = 传统
splitterAppearanceLeft = 左手式
splitterAppearanceCenter = 中心式
splitterAppearanceRight = 右手式
splitterDistributeAscending = 分线端升序排列
splitterDistributeDescending = 分线端降序排列
splitterDistribute = 比特分布
#
# std/Tunnel.java
#
# tunnel component mode
tunnelnormal = \u6B63\u5E38
tunnelmicro = \u5C0F
tunnelmode = \u6A21\u5F0F
#
# circuit/WireClass.java
#
wireComponent =  线路
wireLengthAttr = 长度
wireDirectionAttr = 方向
wireDirectionHorzOption = 水平
wireDirectionVertOption = 垂直

# circuit/appear/AppearanceOrigin
circuitAnchor =  锚
appearanceFacingAttr = 外观朝向

# circuit/appear/AppearancePort
<<<<<<< Updated upstream
circuitPort =  \u5F15\u811A\u7AEF\u53E3
=======
circuitPort =  引脚端口
>>>>>>> Stashed changes
