#
# Analyze.java
#
defaultInputLabels= a,b,c,d,e,f,g,h
defaultOutputLabels= x,y,z,u,v,w,s,t
#
# AnalyzeException.java
#
<<<<<<< Updated upstream
analyzeCircularError= Refer\u00eancia circular detectada; tabela-verdade ser\u00e1 calculada no lugar.
analyzeConflictError= Sa\u00eddas conflitantes detectada; tabela-verdade ser\u00e1 computada em seu lugar.
analyzeCannotHandleError= Computa\u00e7\u00e3o da tabela-verdade em lugar da express\u00e3o devido a %s.
=======
analyzeCircularError= Referência circular detectada; tabela-verdade será calculada no lugar.
analyzeConflictError= Saídas conflitantes detectada; tabela-verdade será computada em seu lugar.
analyzeCannotHandleError= Computação da tabela-verdade em lugar da expressão devido a %s.
>>>>>>> Stashed changes
#
# circuit/Circuit.java
#
circuitName= Nome do circuito
<<<<<<< Updated upstream
circuitLabelLocAttr= Posi\u00e7\u00e3o do r\u00f3tulo
circuitLabelAttr= R\u00f3tulo compartilhado
circuitLabelDirAttr= Dire\u00e7\u00e3o do r\u00f3tulo compartilhado 
circuitLabelFontAttr= Fonte do r\u00f3tulo compartilhado
=======
circuitLabelLocAttr= Posição do rótulo
circuitLabelAttr= Rótulo compartilhado
circuitLabelDirAttr= Direção do rótulo compartilhado 
circuitLabelFontAttr= Fonte do rótulo compartilhado
>>>>>>> Stashed changes
#
# circuit/CircuitMutation.java
#
unknownChangeAction= Alterar circuito
#
# circuit/Subcircuit.java
#
subcircuitViewItem= Ver %s
subcircuitCircuitTip= %s subcircuito
#
# circuit/RadixOption.java
#
radixAttr= Base
<<<<<<< Updated upstream
radix2= Bin\u00e1rio
=======
radix2= Binário
>>>>>>> Stashed changes
radix10Signed= Decimal com sinal
radix10Unsigned= Decimal sem sinal
radix8= Octal
radix16= Hexadecimal
#
# circuit/SplitterClass.java
#
# splitter component name
splitterComponent= Distribuidor
# splitter end tool tips
splitterCombinedTip= Extremidade combinada do distribuidor
splitterSplit0Tip= Nenhum bit oriundo da extremidade combinada
splitterSplit1Tip= Bit %s oriundo da extremidade combinada
splitterSplitManyTip= Bits %s oriundos da extremidade combinada
# splitter attributes
<<<<<<< Updated upstream
splitterBitWidthAttr= Largura em bits \u00e0 entrada
splitterFanOutAttr= Largura em bits \u00e0 sa\u00edda
=======
splitterBitWidthAttr= Largura em bits à entrada
splitterFanOutAttr= Largura em bits à saída
>>>>>>> Stashed changes
splitterBitAttr= Bit %s
splitterBitNone= Nenhum
splitterAppearanceAttr = Forma
splitterAppearanceLegacy = Legado
<<<<<<< Updated upstream
splitterAppearanceLeft = \u00c0 esquerda
splitterAppearanceCenter = Central
splitterAppearanceRight = \u00c0 direita
splitterDistributeAscending = Distribuir em ordem crescente
splitterDistributeDescending = Distribuir em ordem decrescente
splitterDistribute = Distribui\u00e7\u00e3o de bits
#
# std/Tunnel.java
#
# tunnel component mode
tunnelnormal = Normal
tunnelmicro = Pequeno
tunnelmode = Modo
#
# circuit/WireClass.java
#
wireComponent= Conex\u00e3o
wireLengthAttr= Comprimento
wireDirectionAttr= Dire\u00e7\u00e3o
=======
splitterAppearanceLeft = À esquerda
splitterAppearanceCenter = Central
splitterAppearanceRight = À direita
splitterDistributeAscending = Distribuir em ordem crescente
splitterDistributeDescending = Distribuir em ordem decrescente
splitterDistribute = Distribuição de bits
#
# circuit/WireClass.java
#
wireComponent= Conexão
wireLengthAttr= Comprimento
wireDirectionAttr= Direção
>>>>>>> Stashed changes
wireDirectionHorzOption= Horizontal
wireDirectionVertOption= Vertical

# circuit/appear/AppearanceOrigin
<<<<<<< Updated upstream
circuitAnchor= \u00c2ncora
appearanceFacingAttr= Dire\u00e7\u00e3o da forma
=======
circuitAnchor= Âncora
appearanceFacingAttr= Direção da forma
>>>>>>> Stashed changes

# circuit/appear/AppearancePort
circuitPort= Porta
